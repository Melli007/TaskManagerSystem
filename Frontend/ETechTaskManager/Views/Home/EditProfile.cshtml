@model ETechTaskManager.Models.UserUpdateModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Edit Profile";
}

@section BootstrapCSS
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css" />
    <style>

        #Phone, .btn {
            padding-top: 6px;
            padding-bottom: 6px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .btn {
            color: #ffffff;
            background-color: #428BCA;
            border-color: #357EBD;
            font-size: 14px;
            outline: none;
            cursor: pointer;
            padding-left: 12px;
            padding-right: 12px;
        }

            .btn:focus, .btn:hover {
                background-color: #3276B1;
                border-color: #285E8E;
            }

            .btn:active {
                box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
            }

        .alert {
            padding: 15px;
            margin-top: 10px;
            border: 1px solid transparent;
            border-radius: 4px;
        }

        .alert-info {
            border-color: #bce8f1;
            color: #31708f;
            background-color: #d9edf7;
        }

        .alert-error {
            color: #a94442;
            background-color: #f2dede;
            border-color: #ebccd1;
        }

        .close{
             float:none;
        }

        .iti {
            display: block !important;
            max-width: 55% !important;
        }

        /* Custom styling for the password requirements list */
        #passwordHelp {
            font-size: 0.9rem;
            margin-top: 10px;
            color: #6c757d;
        }

        .password-requirements {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

            .password-requirements li {
                padding-left: 1.25rem;
                position: relative;
                font-size: 0.875rem;
                padding-top: 5px;
            }

                .password-requirements li:before {
                    content: "\2022"; /* Bullet point symbol */
                    font-size: 1.5rem;
                    position: absolute;
                    left: 0;
                    top: 0;
                    color: #f5c6cb;
                }

            .password-requirements .valid {
                color: #28a745; /* Green for valid */
            }

            .password-requirements .invalid {
                color: #dc3545; /* Red for invalid */
            }


    </style>
}

<div class="row d-flex justify-content-center align-items-center" style="margin-top: 15px;">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h4 class="mb-3 d-flex justify-content-center">Edito Profilin</h4>

                <form method="post" asp-action="EditProfile">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="form-group">
                        <label asp-for="Username" class="control-label">Username</label>
                        <input asp-for="Username" class="form-control" />
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Email" class="control-label">Email</label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>

                    @if (TempData["OldPasswordValidated"] != null && (bool)TempData["OldPasswordValidated"])
                    {
                        <div class="form-group">
                            <label asp-for="Password" class="control-label">Passwordi Ri</label>
                            <input asp-for="Password" class="form-control" type="password" id="password"/>
                            <span asp-validation-for="Password" class="text-danger"></span>

                            <small id="passwordHelp" class="form-text">
                                <ul class="password-requirements">
                                    <li id="lengthCheck" class="invalid">At least 12 characters</li>
                                    <li id="uppercaseCheck" class="invalid">At least one uppercase letter</li>
                                    <li id="lowercaseCheck" class="invalid">At least one lowercase letter</li>
                                    <li id="digitCheck" class="invalid">At least one digit</li>
                                </ul>
                            </small>
                        </div>
                    }
                    else
                    {
                         <div class="form-group">
                        <label asp-for="Password" class="control-label">Password</label>
                            <button type="button" class="btn btn-primary d-flex" onclick="location.href='@Url.Action("EnterOldPassword", "Home")'">Ndrysho Passwordin?</button>
                        </div>
                    }

                    <div class="form-group">
                        <label asp-for="Phone" class="control-label">Numri Telefonit</label>
                        <input asp-for="Phone" class="form-control" id="Phone" oninput="validatePhoneInput(this)" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>

                    <button type="submit" class="btn btn-primary" id="submitBtn">Ruaj Ndryshimet</button>
                    <a asp-action="Profile" class="btn btn-secondary">Anulo</a>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
    <script>
        const phoneInputField = document.querySelector("#Phone");
        const phoneFormattedField = document.querySelector("#PhoneFormatted");
        const info = document.querySelector(".alert-info");

        const phoneInput = window.intlTelInput(phoneInputField, {
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
            initialCountry: "auto",
            geoIpLookup: function (callback) {
                fetch('https://ipinfo.io?token=66e2f39b20a2bd', { headers: { 'Accept': 'application/json' } })
                    .then(resp => resp.json())
                    .catch(() => ({ country: "us" }))
                    .then(data => callback(data.country));
            }
        });

        // Update the input with the country code when selecting a country
        phoneInputField.addEventListener('countrychange', function () {
            const dialCode = phoneInput.getSelectedCountryData().dialCode;
            phoneInputField.value = `+${dialCode} `;
        });

        // Restrict input to numbers only and limit to 15 digits
        function validatePhoneInput(input) {
            input.value = input.value.replace(/(?!^\+)[^0-9]/g, '').slice(0, 15);
        }


        document.addEventListener('DOMContentLoaded', function () {
            const submitButton = document.getElementById('submitBtn');  // Get the submit button
            const passwordInput = document.getElementById('password'); // Get the password input

            // Check if TempData["OldPasswordValidated"] is true by passing the value directly
            const oldPasswordValidated = '@TempData["OldPasswordValidated"]';

            // If TempData["OldPasswordValidated"] is true, we are in the password change phase
            if (oldPasswordValidated === 'True') {
                // Disable the submit button by default when in the password change phase
                submitButton.disabled = true; // Start with the button disabled

                // Add event listener for input in the password field
                passwordInput.addEventListener('input', function () {
                    const password = this.value; // Get the value of the password

                    // Validate password criteria
                    const lengthCheck = password.length >= 12;
                    const uppercaseCheck = /[A-Z]/.test(password);
                    const lowercaseCheck = /[a-z]/.test(password);
                    const digitCheck = /\d/.test(password);

                    // Update the UI with validity status (if the password meets the requirements)
                    document.getElementById('lengthCheck').classList.toggle('valid', lengthCheck);
                    document.getElementById('lengthCheck').classList.toggle('invalid', !lengthCheck);

                    document.getElementById('uppercaseCheck').classList.toggle('valid', uppercaseCheck);
                    document.getElementById('uppercaseCheck').classList.toggle('invalid', !uppercaseCheck);

                    document.getElementById('lowercaseCheck').classList.toggle('valid', lowercaseCheck);
                    document.getElementById('lowercaseCheck').classList.toggle('invalid', !lowercaseCheck);

                    document.getElementById('digitCheck').classList.toggle('valid', digitCheck);
                    document.getElementById('digitCheck').classList.toggle('invalid', !digitCheck);

                    // Enable the submit button only if all criteria are met
                    if (lengthCheck && uppercaseCheck && lowercaseCheck && digitCheck) {
                        submitButton.disabled = false;  // Enable button if all checks are valid
                    } else {
                        submitButton.disabled = true;  // Keep button disabled if any check fails
                    }
                });
            }
        });
    </script>
}