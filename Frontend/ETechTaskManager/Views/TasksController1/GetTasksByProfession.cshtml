@model IEnumerable<ETechTaskManager.Models.TasksViewModel>

@{
    ViewData["Title"] = "Tasks by Profession";
    int counter = 0;
    int i = 1;
}

<style>
    /* Table styling */
    .content-table {
        border-collapse: collapse;
        margin: 25px 50px 50px;
        font-size: 0.9em;
        min-width: 400px;
        border-radius: 5px 5px 0 0;
        overflow: hidden;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
    }

        .content-table thead tr {
            background-color: #e9e9e9;
            text-align: left;
            font-weight: bold;
        }

        .content-table th, .content-table td {
            padding: 12px 15px;
        }

        .content-table tbody tr {
            border-bottom: 1px solid #dddddd;
        }

            .content-table tbody tr:nth-of-type(even) {
                background-color: #f3f3f3;
            }

            .content-table tbody tr:last-of-type {
                border-bottom: 2px solid #0077cc;
            }

            .content-table tbody tr.active-row {
                font-weight: bold;
                color: #00BFFF;
            }

    /* Dropdown styling */
    .dropbtn {
        background-color: #0077cc;
        color: white;
        padding: 5px 5px;
        font-size: 14px;
        border: none;
        cursor: pointer;
        border-radius: 4px;
    }

        .dropbtn:hover, .dropbtn:focus {
            background-color: #2980B9;
        }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: auto;
        overflow: auto;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        z-index: 1;
        border-radius: 4px;
    }

        .dropdown-content a {
            color: black;
            padding: 12px 9px;
            text-decoration: none;
            display: block;
        }

            .dropdown-content a:hover {
                background-color: #ddd;
            }

    .show {
        display: block;
    }

    .table-title {
        padding-bottom: 15px;
        background: #0077cc;
        color: #fff;
        padding: 16px 30px;
        margin: -20px -25px 10px;
        border-radius: 3px 3px 0 0;
    }

        .table-title h2 {
            margin: 5px 0 0;
            font-size: 24px;
        }

        .table-title .btn {
            color: #566787;
            float: right;
            font-size: 16px;
            background: #fff;
            border: none;
            min-width: 50px;
            border-radius: 2px;
            border: none;
            outline: none !important;
            margin-left: 10px;
        }

            .table-title .btn:hover, .table-title .btn:focus {
                color: #566787;
                background: #f2f2f2;
            }

            .table-title .btn i {
                float: left;
                font-size: 21px;
                margin-right: 5px;
            }

            .table-title .btn span {
                float: right;
                margin-top: 2px;
            }

    .tabs > ul {
        padding: 10px 32px 0 32px;
    }

    .tabs > ul, .sub_tabs > ul {
        letter-spacing: 14px;
        text-align: left;
        direction: ltr;
    }


    ol, ul {
        list-style-type: none;
    }

    .tabs > ul li, .sub_tabs > ul li {
        display: inline-block;
        vertical-align: bottom;
        margin-right: 4px;
        letter-spacing: normal;
    }


        .tabs > ul li .tabs_active, .tabs > ul li .tabs_active:hover, .sub_tabs > ul li .tabs_active, .sub_tabs > ul li .tabs_active:hover {
            opacity: 1 !important;
            border-bottom: 2px solid white !important;
        }

        .tabs > ul li a:hover {
            opacity: 1 !important;
        }

        .tabs > ul li a, .sub_tabs > ul li a {
            margin-right: 16px;
            transition: margin-left ease-out .3s;
        }

        .tabs > ul li a, .tabs > ul li span.tabs_active, .sub_tabs > ul li a, .sub_tabs > ul li span.tabs_active {
            display: inline-block;
            font-weight: 600 !important;
            font-size: 24px;
            opacity: .4;
            padding: 5px 0 10px;
            text-decoration: none;
            margin-right: 0;
            transition: opacity, color .3s linear;
            position: relative;
            border-bottom: 2px solid transparent;
            color: white;
        }

    .tabs > ul li, .sub_tabs > ul li {
        display: inline-block;
        vertical-align: bottom;
        margin-right: 4px;
        letter-spacing: normal;
    }

    .tabs > ul, .sub_tabs > ul {
        letter-spacing: 14px;
        text-align: left;
        direction: ltr;
    }

    /* Dropdown Container */
    .filter-dropdown {
        position: relative;
        display: flex;
        justify-content: right;
        margin: 20px 50px 0px 0px;
    }

    /* Dropdown Button */
    .filter-dropbtn {
        display: flex;
        align-items: center;
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        font-weight: 500;
        color: white;
        background-color: #2563eb; /* Blue-600 */
        border: none;
        border-radius: 0.375rem; /* Rounded-lg */
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

        .filter-dropbtn:hover {
            background-color: #1d4ed8; /* Blue-700 */
        }

        .filter-dropbtn:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.5); /* Focus ring */
        }

    /* Dropdown Icon */
    .dropdown-icon {
        width: 1rem;
        height: 1rem;
        margin-left: 0.5rem;
    }

    /* Dropdown Content */
    .filter-dropdown-content {
        position: absolute;
        right: 0;
        z-index: 10;
        display: none; /* Hidden by default */
        width: 16rem; /* 64 */
        padding: 1rem;
        margin-top: 2.2rem;
        background-color: white;
        border: 1px solid #e5e7eb; /* Gray-200 */
        border-radius: 0.5rem; /* Rounded-lg */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Shadow-lg */
    }

        /* Show Dropdown Content */
        .filter-dropdown-content.show {
            display: block;
        }

    /* Filter Form */
    .filter-form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    /* Filter Group */
    .filter-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

        .filter-group label {
            font-size: 0.875rem;
            font-weight: 500;
            color: #374151; /* Gray-700 */
        }

        /* Input and Select Styles */
        .filter-group select,
        .filter-group input[type="date"] {
            padding: 0.5rem 0.75rem;
            font-size: 0.875rem;
            color: #374151; /* Gray-700 */
            background-color: white;
            border: 1px solid #d1d5db; /* Gray-300 */
            border-radius: 0.375rem; /* Rounded-md */
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05); /* Shadow-sm */
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

            .filter-group select:focus,
            .filter-group input[type="date"]:focus {
                outline: none;
                border-color: #2563eb; /* Blue-600 */
                box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.5); /* Focus ring */
            }

    /* Checkbox Style */
    .checkbox-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        color: #374151; /* Gray-700 */
    }

        .checkbox-label input[type="checkbox"] {
            width: 1rem;
            height: 1rem;
            color: #2563eb; /* Blue-600 */
            border: 1px solid #d1d5db; /* Gray-300 */
            border-radius: 0.25rem; /* Rounded */
            cursor: pointer;
        }

            .checkbox-label input[type="checkbox"]:focus {
                outline: none;
                box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.5); /* Focus ring */
            }

    /* Submit Button */
    .btn-filter {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        font-weight: 500;
        color: white;
        background-color: #2563eb; /* Blue-600 */
        border: none;
        border-radius: 0.375rem; /* Rounded-md */
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

        .btn-filter:hover {
            background-color: #1d4ed8; /* Blue-700 */
        }

        .btn-filter:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.5); /* Focus ring */
        }
</style>

<!-- Filter Section -->
<div class="filter-dropdown">
    <!-- Dropdown Button -->
    <button onclick="toggleFilterDropdown()" class="filter-dropbtn">
        <span>Filtrimet</span>
        <svg class="dropdown-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M19 9L12 16L5 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
    </button>

    <!-- Dropdown Content -->
    <div id="filter-dropdown-content" class="filter-dropdown-content">
        <form method="get" class="filter-form">
            <!-- Status Filter -->
            <div class="filter-group">
                <label for="status">Status:</label>
                <select id="status" name="status">
                    <option value="" selected="@(string.IsNullOrEmpty(Context.Request.Query["status"]) ? "selected" : null)">Të gjitha</option>
                    <option value="Në Pritje" selected="@(Context.Request.Query["status"] == "Në Pritje" ? "selected" : null)">Në Pritje</option>
                    <option value="Në Progres" selected="@(Context.Request.Query["status"] == "Në Progres" ? "selected" : null)">Në Progres</option>
                    <option value="Të Vonuara" selected="@(Context.Request.Query["status"] == "Të Vonuara" ? "selected" : null)">Të Vonuara</option>
                    <option value="Të Përfunduara" selected="@(Context.Request.Query["status"] == "Të Përfunduara" ? "selected" : null)">Të Përfunduara</option>
                </select>
            </div>

            <!-- Sort Order -->
            <div class="filter-group">
                <label for="sortOrder">Rendit sipas datës krijimit:</label>
                <select id="sortOrder" name="sortOrder">
                    <option value="" selected="@(string.IsNullOrEmpty(Context.Request.Query["sortOrder"]) ? "selected" : null)">Asnjë</option>
                    <option value="asc" selected="@(Context.Request.Query["sortOrder"] == "asc" ? "selected" : null)">ASC</option>
                    <option value="desc" selected="@(Context.Request.Query["sortOrder"] == "desc" ? "selected" : null)">DESC</option>
                </select>
            </div>

            <!-- Date Range: Start -->
            <div class="filter-group">
                <label for="startDate">Nga data:</label>
                <input type="date" id="startDate" name="startDate" value="@Context.Request.Query["startDate"]" />
            </div>

            <!-- Date Range: End -->
            <div class="filter-group">
                <label for="endDate">Deri më:</label>
                <input type="date" id="endDate" name="endDate" value="@Context.Request.Query["endDate"]" />
            </div>

            <!-- High Priority Filter -->
            <div class="filter-group">
                <label for="highPriority" class="checkbox-label">
                    <input type="checkbox" id="highPriority" name="highPriority" value="true" @(Context.Request.Query["highPriority"] == "true" ? "checked" : "") />
                    <span>High Priority</span>
                </label>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn-filter">Filtro</button>
        </form>
    </div>
</div>


@if (Model == null || !Model.Any())
{
    <table class="content-table">
        <thead>
            <!-- Table Title Row -->
            <tr>
                <th colspan="10" class="table-title">
                    <div class="tabs">
                        <ul>
                            <li class="movable_tab"><a href="@Url.Action("GetAssignedTasks", "TasksController1")">Detyrat e mia</a></li>
                            <li class="movable_tab"><a href="@Url.Action("GetCreatedTasks", "TasksController1")">Detyrat e mia te krijuara</a></li>
                            <li class="movable_tab"> <a class="tabs_active" href="@Url.Action("GetTasksByProfession", "TasksController1")">Detyrat e departmentit</a></li>
                            <li class="movable_tab"> <a href="@Url.Action("GetTasksByUserId", "TasksController1")">Te gjitha detyrat</a></li>
                        </ul>
                    </div>
                </th>
            </tr>
            <tr>
                <th>#</th>
                <th>Titulli</th>
                <th>Deskripcioni</th>
                <th>Krijuar Per</th>
                <th>Statusi</th>
                <th>Krijuar Nga</th>
                <th>Data Krijimit</th>
                <th>Data Mbarimit</th>
            </tr>
        </thead>
        <tbody>
        <td></td>
        <td></td>
        <td></td>
        <td>
            <div style="text-align:center; margin-top:50px;">
                <h2>Nuk keni asnjë detyrë të caktuar.</h2>
            </div>
        </td>
        </tbody>
    </table>
}
else
{
    <table class="content-table">
        <thead>
            <!-- Table Title Row -->
            <tr>
                <th colspan="10" class="table-title">
                    <div class="tabs">
                        <ul>
                            <li class="movable_tab"><a href="@Url.Action("GetAssignedTasks", "TasksController1")">Detyrat e mia</a></li>
                            <li class="movable_tab"><a href="@Url.Action("GetCreatedTasks", "TasksController1")">Detyrat e mia te krijuara</a></li>
                            <li class="movable_tab"> <a class="tabs_active" href="@Url.Action("GetTasksByProfession", "TasksController1")">Detyrat e departmentit</a></li>
                            <li class="movable_tab"> <a href="@Url.Action("GetTasksByUserId", "TasksController1")">Te gjitha detyrat</a></li>
                        </ul>
                    </div>

                </th>
            </tr>
            <!-- Column Headers -->
            <tr>
                <th>#</th>
                <th>Titulli</th>
                <th>Deskripcioni</th>
                <th>Krijuar Per</th>
                <th>Statusi</th>
                <th>Krijuar Nga</th>
                <th>Data Krijimit</th>
                <th>Data Mbarimit</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model)
            {
                string rowClass = (counter % 2 == 1) ? "active-row" : "";
                <tr class="@rowClass">
                    <td>@(i)</td>
                    <td>@task.Title</td>
                    <td>@task.Description</td>
                    <td>@task.AssignedToName</td>
                    <td>@task.Status</td>
                    <td>@task.CreatedByName</td>
                    <td>@task.CreatedAt</td>
                    <td>@task.DueDateDisplay</td>
                </tr>
                counter++;
                i++;
            }
        </tbody>
    </table>
}
<script>
    function toggleFilterDropdown() {
        const filterDropdown = document.getElementById("filter-dropdown-content");
        const dropdownIcon = document.querySelector(".filter-dropbtn svg");

        // Toggle the dropdown visibility
        filterDropdown.classList.toggle("show");

        // Rotate the dropdown icon
        if (filterDropdown.classList.contains("show")) {
            dropdownIcon.style.transform = "rotate(180deg)";
        } else {
            dropdownIcon.style.transform = "rotate(0deg)";
        }
    }

    // Close the dropdown if the user clicks outside of it
    document.addEventListener("click", function (event) {
        const filterDropdown = document.getElementById("filter-dropdown-content");
        const dropdownButton = document.querySelector(".filter-dropbtn");
        const dropdownIcon = document.querySelector(".filter-dropbtn svg");

        // Check if the click is outside the dropdown and button
        if (!event.target.closest(".filter-dropdown")) {
            // Hide the dropdown
            filterDropdown.classList.remove("show");

            // Reset the dropdown icon rotation
            dropdownIcon.style.transform = "rotate(0deg)";
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        // Select all tabs
        const tabs = document.querySelectorAll(".movable_tab a");

        // Add a click event listener to each tab
        tabs.forEach(tab => {
            tab.addEventListener("click", function (event) {

                // Remove the active class from all tabs
                tabs.forEach(t => t.classList.remove("tabs_active"));

                // Add the active class to the clicked tab
                this.classList.add("tabs_active");

                // Optionally, load content for the clicked tab via AJAX or other methods
                console.log(`Tab clicked: ${this.innerText}`);
            });
        });
    });
</script>